from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart

from utils.database import Database
from utils.constants import BOT_USERNAME
from keyboards.keyboards import get_main_inline_keyboard, get_reply_keyboard

router = Router()
db = Database()

@router.message((CommandStart()) or (F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
async def cmd_start(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username
    full_name = message.from_user.full_name
    referrer_id = None
    
    if len(message.text.split()) > 1:
        try:
            referrer_id = int(message.text.split()[1])
        except ValueError:
            pass
    
    if not db.add_user(user_id, username, full_name, referrer_id):
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return
    
    await message.answer(f"üëã –ü—Ä–∏–≤–µ—Ç, {full_name}!\n\n"
        "ü§ñ –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è MetaTrader 5\n\n", reply_markup=get_reply_keyboard())
    
    welcome_text = (
        f"üìä –ß—Ç–æ —è —É–º–µ—é:\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n"
        "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞–º–∏ –∏ –ø–æ–∑–∏—Ü–∏—è–º–∏\n"
        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n"
        "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—á–µ—Ç–∞\n\n"
        "üí° –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )
    
    await message.answer(welcome_text, reply_markup=get_main_inline_keyboard())
    
    if referrer_id:
        referrer_profile = db.get_user_profile(referrer_id)
        if referrer_profile:
            await message.bot.send_message(
                referrer_id,
                f"üéâ –£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª!\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {full_name}\n"
                f"üì± Username: @{username if username else '–ù–µ—Ç'}"
            )

@router.message(Command("help"))
async def help_command(message: Message):
    help_text = (
        "üìö –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n"
        "üîπ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "get_id - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à ID\n\n"
        "üîπ –¢–æ—Ä–≥–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
        "‚Ä¢ –ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é - –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ä–¥–µ—Ä–∞ - –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤\n"
        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç–æ—Ä–≥–æ–≤–ª–∏\n"
        "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n\n"
        "üí° –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ /start"
    )
    await message.answer(help_text, reply_markup=get_reply_keyboard())

@router.message(Command("status"))
async def status_command(message: Message):
    status_text = (
        "üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:\n\n"
        "‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ\n"
        "ü§ñ –í–µ—Ä—Å–∏—è: 1.0.0\n"
        "üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: 20.04.2024\n\n"
        "üí° –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é"
    )
    await message.answer(status_text, reply_markup=get_reply_keyboard()) 
    
@router.message(F.text == "get_id")
async def get_id_command(message: Message):
    await message.answer(f"ID —á–∞—Ç–∞: {message.chat.id}\n"
                         f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}\n")
